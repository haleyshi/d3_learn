<!DOCTYPE html>
<html>
<head>
	<title>Interaction</title>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<script type="text/javascript" src="http://apps.bdimg.com/libs/d3/3.4.8/d3.min.js"></script>

	<style type="text/css">
	.axis path,
	.axis line{
	    fill: none;
	    stroke: black;
	    shape-rendering: crispEdges;
	}

	.axis text {
	    font-family: sans-serif;
	    font-size: 11px;
	}

	.MyText {
		fill: white;
		text-anchor: middle;
	}
	</style>

	<script type="text/javascript">
	window.onload = function() {
		var width= 500;
		var height = 500;

		var rectPadding = 4;

		var svg = d3.select("body")
					.append("svg")
					.attr("width", width)
					.attr("height", height);

		// Padding around Canvas/SVG
		var padding = {left:30, right:30, top:20, bottom:20};

		var dataset = [10, 20, 30, 40, 33, 24, 12, 5];

		// Linear Scale for x Axis
		var xScale = d3.scale.ordinal()
						.domain(d3.range(dataset.length))
						.rangeRoundBands([0, width - padding.left - padding.right]);

		// Linear Scale for y Axis
		var yScale = d3.scale.linear()
						.domain([0, d3.max(dataset)])
						.range([height - padding.top - padding.bottom, 0]);

		// Axis
		var xAxis = d3.svg.axis()
							.scale(xScale)     // 比例尺
							.orient("bottom"); // 刻度的方向

		var yAxis = d3.svg.axis()
							.scale(yScale)     // 比例尺
							.orient("left"); // 刻度的方向					

		// Rects
		var rects = svg.selectAll(".MyRect") 
						.data(dataset)  
						.enter()        
						.append("rect")   
						.attr("class", "MyRect")
						.attr("transform", "translate(" + padding.left + "," + padding.top + ")")
						.attr("x", function(d, i) {
							return xScale(i) + rectPadding/2;
						})
						.attr("y", function(d) {
							return yScale(d);
						})
						.attr("width", xScale.rangeBand() - rectPadding)
						.attr("height", function(d) {
							return height - padding.top - padding.bottom - yScale(d);
						})
						.attr("fill", "steelblue")
						.on("mouseover", function() {
							d3.select(this)
								.attr("fill", "yellow");
						})
						.on("mouseout", function() {
							d3.select(this)
								.transition()
								.duration(500)
								.attr("fill", "steelblue");
						});

		// Texts
		var texts = svg.selectAll(".MyText")
						.data(dataset)
						.enter()
						.append("text")
						.attr("class", "MyText")
						.attr("transform", "translate(" + padding.left + "," + padding.top + ")")
						.attr("x", function(d, i) {
							return xScale(i) + rectPadding/2;
						})
						.attr("y", function(d) {
							return yScale(d);
						})
						.attr("dx", (xScale.rangeBand() - rectPadding)/2)
						.attr("dy", 20)
						.text(function(d) {
							return d;
						});

		// Axises
		svg.append("g").attr("class", "axis")
						.attr("transform", "translate(" + padding.left + ", " + (height - padding.bottom) + ")")    // translate(left, top)
						.call(xAxis);

		svg.append("g").attr("class", "axis")
						.attr("transform", "translate(" + padding.left + ", " + padding.top + ")")    // translate(left, top)
						.call(yAxis);
	}
	</script>
</head>
<body>

</body>
</html>