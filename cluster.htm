<!DOCTYPE html>
<html>
<head>
	<title>Cluster</title>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<script type="text/javascript" src="http://apps.bdimg.com/libs/d3/3.4.8/d3.min.js"></script>

	<style type="text/css">
	.node circle {
	  fill: #fff;
	  stroke: steelblue;
	  stroke-width: 1.5px;
	}

	.node {
	  font: 12px sans-serif;
	}

	.link {
	  fill: none;
	  stroke: #ccc;
	  stroke-width: 1.5px;
	}
	</style>

	<script type="text/javascript">
	window.onload = function() {
		var width= 500;
		var height = 500;

		var svg = d3.select("body")
					.append("svg")
					.attr("width", width)
					.attr("height", height)
					.append("g")
					.attr("transform", "translate(40,0)");

		var cluster = d3.layout.cluster()
								.size([width, height-200]);

		//对角线生成器
		var diagonal = d3.svg.diagonal()
								.projection(function(d) {
									return [d.y, d.x]
								});

		d3.json("city.json", function(error, root) {
			var nodes = cluster.nodes(root);
			var links = cluster.links(nodes);

			//绘制连线
			var link = svg.selectAll(".link")
							.data(links)
							.enter()
							.append("path")
							.attr("class", "link")
							.attr("d", diagonal);

			//绘制节点
			var node = svg.selectAll(".node")
							.data(nodes)
							.enter()
							.append("g")
							.attr("class", "node")
							.attr("transform", function(d) {
								return "translate(" + d.y + "," + d.x + ")";
							});

			node.append("circle")
					.attr("r", 4.5);

			node.append("text")
					.attr("dx", function(d) {
						return d.children ? -8 : 8;
					})
					.attr("dy", 3)
					.style("text-anchor", function(d) {
						return d.children ? "end" : "start";
					})
					.text(function(d) {
						return d.name;
					});
		});
		
	}
	</script>
</head>
<body>

</body>
</html>